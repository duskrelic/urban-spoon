# Versions
org.projectlombok.version=1.18.16
org.junit.jupiter.version=5.7.0
org.junit.platform.version=1.7.0
# Gradle Settings
# When set to true, Gradle will reuse task outputs from any previous build, when possible,
# resulting is much faster builds. Learn more about using the build cache.
org.gradle.caching=true
# When set to true, individual input property hashes and the build cache key for each task
# are logged on the console. Learn more about task output caching.
#org.gradle.caching.debug=false
# Enables incubating configuration on demand, where Gradle will attempt to configure only necessary projects.
# org.gradle.configureondemand=(true, false)
#  Customize console output coloring or verbosity. Default depends on how Gradle is invoked.
#  See command-line logging for additional details â€” (auto, plain, rich, verbose)
org.gradle.console=rich
# When set to true the Gradle Daemon is used to run the build. Default is true.
# org.gradle.daemon=(true, false)
# Gradle Daemon will terminate itself after specified number of idle milliseconds. Default is 10800000 (3 hours).
#org.gradle.daemon.idletimeout=timeInMs
# When set to true, Gradle will run the build with remote debugging enabled, listening on port 5005.
# Note that this is the equivalent of adding -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005
# to the JVM command line and will suspend the virtual machine until a debugger is attached. Default is false.
# org.gradle.debug=(true, false)
# Specifies the JVM arguments used for the Gradle Daemon. The setting is particularly useful for
# configuring JVM memory settings for build performance. This does not affect the JVM settings for the Gradle client VM.
# org.gradle.jvmargs=
# When set to quiet, warn, lifecycle, info, or debug, Gradle will use this log level.
# The values are not case sensitive. The lifecycle level is the default. See Choosing a log level.
# org.gradle.logging.level=(quiet, warn, lifecycle, info, debug)
# When configured, Gradle will fork up to org.gradle.workers.max JVMs to execute projects in parallel.
# To learn more about parallel task execution, see the Gradle performance guide.
org.gradle.parallel=true
# Specifies the scheduling priority for the Gradle daemon and all processes launched by it.
# Default is normal. See also performance command-line options.
# org.gradle.priority=(low, normal)
# Configures verbose logging when watching the file system. Default is off.
#org.gradle.vfs.verbose=(true, false)
# Toggles watching the file system. Allows Gradle to re-use information about the
# file system in the next build. Default is off.
# org.gradle.vfs.watch=(true, false)
# When set to all, summary or none, Gradle will use different warning type display.
# See Command-line logging options for details.
# org.gradle.warning.mode=(all, fail, summary, none)
# When configured, Gradle will use a maximum of the given number of workers.
# Default is number of CPU processors. See also performance command-line options.
org.gradle.workers.max=4
