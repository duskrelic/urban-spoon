package com.pebblepost.cpp_sync.service.filesystem;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.Comparator;
import java.util.Optional;

import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Service;

@Service
@Profile("dev")
@ConfigurationProperties("files")
public class LocalFileSystemService implements FileSystemService {

  private String srcDir;

  @Override
  public void writeRemoteFile() throws IOException {

    Path dir = Paths.get(srcDir);  // specify your directory

    Optional<Path> lastFilePath = Files
        .list(dir)    // here we get the stream with full directory listing
        .filter(f -> !Files.isDirectory(f))  // exclude subdirectories from listing
        .max(Comparator.comparingLong(f -> f.toFile()
            .lastModified()));  // finally get the last file using simple comparator by lastModified field

    if (lastFilePath.isPresent()) // your folder may be empty
    {
      // do your code here, lastFilePath contains all you need
    }
    File tempDestFile = File.createTempFile("cpp", ".xlsx");

//    Files.copy(srcFilePath,
//        tempDestFile.toPath(),
//        StandardCopyOption.REPLACE_EXISTING);

    tempDestFile.deleteOnExit();

  }
}
